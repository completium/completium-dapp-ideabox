{"version":3,"sources":["settings.js","dapp.js","components/WalletButton.js","components/Settings.js","components/HeaderBar.js","components/Footer.js","components/SnackMsg.js","components/Idea.js","components/AddIdea.js","components/IdeaForm.js","components/SortIdea.js","components/Account.js","App.js","serviceWorker.js","index.js"],"names":["constate","useState","network","endpoint","contract","show","settings","setState","setNetwork","nw","s","setEndpoint","ep","setContract","c","hideSettings","showSettings","getBcdUrl","SettingsProvider","useSettingsContext","appName","React","wallet","tezos","accountPkh","ready","Boolean","useEffect","ThanosWallet","onAvailabilityChange","available","connect","useCallback","opts","a","Error","tzs","toTezos","pkh","alert","message","v","DAppProvider","useWallet","useTezos","useAccountPkh","useReady","useConnect","WalletButton","props","Button","color","disableElevation","size","style","position","right","onClick","handleConnect","Link","href","rel","underline","variant","backgroundColor","fontWeight","SettingsPanel","addr","setAddr","setNet","setEnd","isAddrError","length","startsWith","Dialog","onClose","aria-labelledby","open","DialogTitle","id","DialogContent","DialogContentText","Grid","container","spacing","maringBottom","item","xs","TextField","value","onChange","e","target","label","fullWidth","error","helperText","DialogActions","reloadStorage","SettingsButton","component","HeaderBar","visible","useMediaQuery","dark","theme","palette","type","AppBar","boxShadow","opacity","Toolbar","Typography","fontFamily","flexGrow","visibility","appTitle","Footer","heigh","minHeight","Alert","elevation","SnackMsg","Snackbar","severity","secondary","main","Idea","Card","CardContent","direction","justify","alignItems","boxopen","IconButton","aria-label","at","then","methods","vote","send","op","console","log","opHash","openSnack","receipt","handleReceipt","winner","align","paddingLeft","title","paddingRight","desc","Divider","paddingBottom","direciton","fontSize","padding","paddingTop","author","creation","nbvotes","Fab","toHexString","bytes","reduce","str","byte","toString","padStart","withStyles","root","margin","closeButton","top","grey","children","classes","disableTypography","className","MuiDialogContent","IdeaForm","state","handleChange","event","onclose","dividers","account","placeholder","multiline","rowsMax","info","t","compressToUint8Array","d","add_idea","catch","options","SortIdea","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClose","current","contains","ButtonGroup","ref","aria-controls","undefined","aria-expanded","aria-haspopup","prevOpen","Popper","anchorEl","role","transition","disablePortal","zIndex","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","map","option","index","MenuItem","key","disabled","selected","handleMenuItemClick","Account","Container","height","accountState","LinearProgress","isvoter","SortIdeas","ideas","by","sort","i1","i2","fromHexString","hexString","Uint8Array","match","parseInt","PageRouter","accountAddress","status","votes","storage","setStorage","reload","setReload","viewSnack","setViewSnack","ideaForm","setIdeaForm","setIdeaSort","loadIdeaxBoxContent","Tezos","TezosToolkit","cstorage","winners","forEach","w","push","ids","idea","i","k","m","decompressFromUint8Array","substring","includes","voter","_state","isVoter","useMemo","createMuiTheme","light","contrastText","ThemeProvider","CssBaseline","maxWidth","marginBottom","Chip","clickable","onDelete","deleteIcon","marginTop","AddIdea","App","Suspense","fallback","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.086545ed.chunk.js","sourcesContent":["import { useState } from 'react';\nimport constate from \"constate\";\n\nexport function useSettings() {\n\n  const [settings,setState] = useState({\n    network  : 'edo2net',\n    endpoint : 'https://edonet.smartpy.io',\n    contract : 'KT1QNURPMuFJSmTLRttRutb4gfJ6NS4BfsM6',\n    show     : false,\n  });\n\n  const setNetwork = (nw) => { setState((s) => {\n      return { ...s, network: nw };\n    });\n  }\n\n  const setEndpoint = (ep) => { setState((s) => {\n      return { ...s, endpoint: ep };\n    });\n  }\n\n  const setContract = (c) => { setState((s) => {\n      return { ...s, contract: c };\n    });\n  }\n\n  const hideSettings = () => { setState((s) => {\n      return { ...s, show: false };\n    })\n  }\n\n  const showSettings = () => { setState((s) => {\n      return { ...s, show: true };\n    })\n  }\n\n  const getBcdUrl = () => {\n    return 'https://better-call.dev/' + settings.network + '/' + settings.contract;\n\n  }\n\n  return { settings, setNetwork, setEndpoint, setContract, hideSettings, showSettings, getBcdUrl };\n}\n\nexport const [SettingsProvider, useSettingsContext] = constate(useSettings);\n\nexport const githubUrl = \"https://github.com/edukera/completium-dapp-ideabox\"\n\nexport const appTitle = \"Vote for the best ideas!\"\n\nexport const appName = \"IdeaCorp.\"\n\n","import React from 'react';\nimport constate from 'constate';\nimport { ThanosWallet } from '@thanos-wallet/dapp';\n\nexport const [\n  DAppProvider,\n  useWallet,\n  useTezos,\n  useAccountPkh,\n  useReady,\n  useConnect,\n] = constate(\n  useDApp,\n  (v) => v.wallet,\n  (v) => v.tezos,\n  (v) => v.accountPkh,\n  (v) => v.ready,\n  (v) => v.connect\n);\n\nfunction useDApp({ appName }) {\n  const [{ wallet, tezos, accountPkh }, setState] = React.useState(() => ({\n    wallet: null,\n    tezos: null,\n    accountPkh: null,\n  }));\n\n  const ready = Boolean(tezos);\n\n  React.useEffect(() => {\n    return ThanosWallet.onAvailabilityChange((available) => {\n      setState({\n        wallet: available ? new ThanosWallet(appName) : null,\n        tezos: null,\n        accountPkh: null,\n      });\n    });\n  }, [setState, appName]);\n\n  const connect = React.useCallback(\n    async (network, opts) => {\n      try {\n        if (!wallet) {\n          throw new Error('Thanos Wallet not available');\n        }\n        await wallet.connect(network, opts);\n        const tzs = wallet.toTezos();\n        const pkh = await tzs.wallet.pkh();\n        setState({\n          wallet,\n          tezos: tzs,\n          accountPkh: pkh,\n        });\n      } catch (err) {\n        alert(`Failed to connect ThanosWallet: ${err.message}`);\n      }\n    },\n    [setState, wallet]\n  );\n\n  return {\n    wallet,\n    tezos,\n    accountPkh,\n    ready,\n    connect,\n  };\n}\n\nexport function useOnBlock(tezos, callback) {\n  const blockHashRef = React.useRef();\n\n  React.useEffect(() => {\n    let sub;\n    spawnSub();\n    return () => sub.close();\n\n    function spawnSub() {\n      sub = tezos.stream.subscribe('head');\n\n      sub.on('data', (hash) => {\n        if (blockHashRef.current && blockHashRef.current !== hash) {\n          callback(hash);\n        }\n        blockHashRef.current = hash;\n      });\n      sub.on('error', (err) => {\n        if (process.env.NODE_ENV === 'development') {\n          console.error(err);\n        }\n        sub.close();\n        spawnSub();\n      });\n    }\n  }, [tezos, callback]);\n}","import React from 'react';\nimport { useReady, useWallet } from '../dapp';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\nconst WalletButton = (props) => {\n  const ready = useReady();\n  const wallet = useWallet();\n  return ((ready) ? (\n        <div></div>\n      ) :(wallet ? (\n          <Button color=\"secondary\"\n            disableElevation\n            size=\"small\"\n            style={{ color: 'white', position: 'absolute', right: '160px' }}\n            onClick={props.handleConnect}>\n            connect to wallet\n          </Button>\n        ):(\n          <Link href=\"https://templewallet.com/\" rel=\"noopener\" underline=\"none\" style={{\n            position: 'absolute',\n            right: '160px'\n          }}>\n            <Button variant=\"contained\" size=\"small\" disableElevation\n              style={{\n                backgroundColor: '#ed8936',\n                color: 'white',\n                fontWeight: 'bold',\n                }}>\n              Install Temple\n            </Button>\n          </Link>\n      )));\n}\n\nexport default WalletButton;\n","import { Button } from '@material-ui/core';\nimport React from 'react';\nimport { useSettingsContext } from '../settings';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport TextField from '@material-ui/core/TextField';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Grid from '@material-ui/core/Grid';\n\nfunction isInvalidAddress (v) {\n  const lgt = v.length;\n  const tz1 = v.startsWith('KT1');\n  return (lgt !== 36) | !tz1;\n}\n\nexport const SettingsPanel = (props) => {\n  const { settings, setContract, setNetwork, setEndpoint, hideSettings } = useSettingsContext();\n  const [ addr, setAddr ] = React.useState(settings.contract);\n  const [ network, setNet ] = React.useState(settings.network);\n  const [ endpoint, setEnd ] = React.useState(settings.endpoint);\n  const isAddrError = () => {\n    return addr.length > 0 & isInvalidAddress(addr);\n  }\n  const handleSave = () => {\n    setContract(addr);\n    setNetwork(network);\n    setEndpoint(endpoint);\n    props.reloadStorage();\n    hideSettings();\n  }\n  return (\n    <Dialog onClose={ hideSettings } aria-labelledby=\"simple-dialog-title\" open={ settings.show }>\n      <DialogTitle id=\"simple-dialog-title\">Settings</DialogTitle>\n      <DialogContent>\n          <DialogContentText>\n            Fill the form below to point the DApp interface to another Smart Contract, network or endpoint.\n          </DialogContentText>\n          <Grid container spacing={3} style={{ maringBottom: '12px' }}>\n            <Grid item xs={12}>\n              <TextField\n                value={ addr }\n                onChange={ e => setAddr(e.target.value) }\n                id=\"contract\"\n                label=\"Smart Contract Address\"\n                color=\"secondary\"\n                fullWidth\n                error={ isAddrError() }\n                helperText={(isAddrError())?\"Invalid address format\":\"\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={ network }\n                onChange={ e => setNet(e.target.value) }\n                id=\"network\"\n                label=\"Network\"\n                color=\"secondary\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                value={ endpoint }\n                onChange={ e => setEnd(e.target.value) }\n                id=\"endpoint\"\n                label=\"Endpoint\"\n                color=\"secondary\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={ hideSettings } color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={ handleSave } color=\"secondary\">\n            Save\n          </Button>\n        </DialogActions>\n    </Dialog>\n  )\n}\n\nexport const SettingsButton = (props) => {\n  const { settings, showSettings } = useSettingsContext();\n  return (<Button onClick={ showSettings }  style={{ color: 'white' }} component=\"span\">\n    <SettingsIcon />\n  </Button>)\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport '../index.css';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport WalletButton from './WalletButton';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { SettingsButton } from './Settings';\n\nconst HeaderBar = (props) => {\n  const minWidth = useMediaQuery('(min-width:600px)');\n  var visible = minWidth?'visible':'hidden';\n  var dark = props.theme.palette.type === 'dark';\n  return (\n    <AppBar position=\"static\" color={dark?\"default\":\"secondary\"}  style={{\n      boxShadow: \"none\",\n      opacity: 1,\n      /* backgroundColor: '#212121' */ }}>\n      <Toolbar>\n        <Typography variant=\"h6\" style={{ fontFamily : 'Alegreya Sans SC, sans-serif' }}>\n          Completium\n        </Typography>\n        <Typography variant=\"h6\" style={{\n          flexGrow : 1,\n          visibility: visible,\n          }}>\n          {props.appTitle}\n        </Typography>\n        <WalletButton handleConnect={props.handleConnect}/>\n        <SettingsButton />\n        <a href=\"https://completium.com/docs/dapp-ideabox\" target=\"_blank\">\n          <Button style={{ color: 'white' }} component=\"span\">\n            <HelpOutlineIcon/>\n          </Button>\n        </a>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default HeaderBar","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport '../index.css';\n\nconst Footer = (props) => {\n    return (\n      <AppBar position=\"static\" color=\"default\" style={{ boxShadow: \"none\", opacity: 1, heigh: 300 }}>\n        <Toolbar style={{ minHeight: 256 }}>\n          <Typography variant=\"body2\" color=\"textSecondary\" style={{ flexGrow : 1 }}>\n            @copyright {props.appName} 2021\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n\n  export default Footer","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst SnackMsg = (props) => {\n    return (\n      <Snackbar open={props.open} >\n        <Alert severity=\"info\" style={{\n            backgroundColor: props.theme.palette.secondary.main\n        }}>\n          Waiting for operation confirmation ...\n        </Alert>\n      </Snackbar>)\n}\n\nexport default SnackMsg","import React from 'react';\nimport { useSettingsContext } from '../settings.js';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider, Grid } from '@material-ui/core';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport StarIcon from '@material-ui/icons/Star';\nimport { useTezos, useReady } from '../dapp';\n\nconst Idea = (props) => {\n\n  const tezos = useTezos();\n  const ready = useReady();\n  const { settings } = useSettingsContext();\n\n  const handleVote = () => {\n    tezos.wallet.at(settings.contract).then(contract => {\n      contract.methods.vote(props.id, 1).send().then( op => {\n        console.log(`waiting for ${op.opHash} to be confirmed`);\n        props.openSnack();\n        op.receipt().then(() => {\n          props.handleReceipt();\n        });\n      })\n    });\n  }\n\n  return (\n    <Card>\n      <CardContent>\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\n          <Grid item xs={1} >\n            { (props.boxopen && ready) ? (\n              <IconButton color=\"secondary\" aria-label=\"upload picture\" component=\"span\" onClick={handleVote}>\n                <ThumbUpIcon />\n              </IconButton>\n            ) : (\n              (!props.boxopen) ? (\n                (props.winner)? (<StarIcon color=\"secondary\"/>) : (<div></div>)\n              ) : (\n                <div></div>\n              )\n            )}\n          </Grid>\n          <Grid item xs={11} >\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"flex-start\" spacing={1}>\n              <Grid item>\n              <Typography\n                  color={(!props.boxopen && !props.winner) ? \"textSecondary\" : \"textPrimary\"}\n                  variant=\"h6\" align=\"left\" style={{ paddingLeft: 12 }}> {props.title} </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  color={(!props.boxopen && !props.winner) ? \"textSecondary\" : \"textPrimary\"}\n                  variant=\"body2\" align=\"left\" style={{ paddingLeft: 12, paddingRight: 12 }}> {props.desc} </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider></Divider>\n      <CardContent style={{ paddingBottom: 16 }}>\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ paddingLeft: 26, paddingRight: 12 }}>\n          <Grid item xs={9}>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={3}>\n              <Grid item >\n                <Typography color=\"textSecondary\" style={{ fontWeight: 'bold' }}> #{props.id} </Typography>\n              </Grid>\n              <Grid item >\n                <Grid container direciton=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ paddingLeft: 18 }}>\n                  <Typography color=\"textSecondary\">by: </Typography>\n                  <Typography color=\"textSecondary\" style={{\n                    fontSize: 14,\n                    fontFamily: 'Courier Prime, monospace',\n                    padding: 8,\n                    paddingTop: 12\n                  }}>{props.author}</Typography>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container direciton=\"row\" justify=\"flex-start\" alignItems=\"center\">\n                  <Typography color=\"textSecondary\">creation: </Typography>\n                  <Typography color=\"textSecondary\" style={{\n                    fontSize: 14,\n                    fontFamily: 'Courier Prime, monospace',\n                    padding: 8,\n                    paddingTop: 12\n                  }}>{props.creation}</Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={3}>\n            <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" spacing={1}>\n              <Grid item>\n                <Typography> {props.nbvotes} </Typography>\n              </Grid>\n              <Grid item>\n                <ThumbUpIcon fontSize=\"small\" />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default Idea","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\n\nconst SnackMsg = (props) => {\n  return (\n    <Snackbar open={true}>\n      <Fab color=\"secondary\" onClick={props.onClick}>\n        <AddIcon />\n      </Fab>\n    </Snackbar>)\n}\n\nexport default SnackMsg","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport { TextField, Button, Divider, Grid, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { useTezos } from '../dapp';\nimport { compressToUint8Array } from 'lz-string'\nimport { useSettingsContext } from '../settings.js';\n\nconst toHexString = bytes =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    /* backgroundColor: (theme.palette.type === 'light') ? theme.palette.background.default : '#212121' */\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\n\nconst IdeaForm = (props) => {\n  const tezos = useTezos();\n  const [state, setState] = React.useState({ title: \"\", desc: \"\" });\n  const { settings } = useSettingsContext();\n  const handleChange = (event) => {\n    if (event.target.id === 'standard-basic') {\n      setState({\n        title: event.target.value,\n        desc: state.desc\n      })\n    } else {\n      setState({\n        title: state.title,\n        desc: event.target.value\n      })\n    }\n  }\n  const handleSubmit = () => {\n    console.info(state);\n    tezos.wallet.at(settings.contract).then(contract => {\n      var t = toHexString(compressToUint8Array(state.title));\n      var d = toHexString(compressToUint8Array(state.desc));\n      contract.methods.add_idea(t, d).send().then( op => {\n        console.log(`waiting for ${op.opHash} to be confirmed`);\n        props.openSnack();\n        op.receipt().then(() => {\n          props.handleReceipt();\n        }).catch(error => console.log(`Error: ${error}`));\n      }).catch(error => console.log(`Error: ${error}`))\n    });\n    props.onclose();\n  }\n\n  return (\n    <Dialog open={props.open} onClose={props.onclose} fullWidth={true}>\n      <DialogTitle id=\"customized-dialog-title\" onClose={props.onclose}>\n        New idea\n      </DialogTitle>\n      <DialogContent dividers style= {{ padding: 0 }}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Grid container direction=\"row\" style={{ padding: 16 }} spacing={3}>\n              <Grid item>\n                <Typography>Author:</Typography>\n              </Grid>\n              <Grid>\n                <Typography color=\"textSecondary\" style={{\n                      fontSize: 14,\n                      fontFamily: 'Courier Prime, monospace',\n                      paddingTop: 15\n                    }}>{props.account}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Divider></Divider>\n          <Grid item style={{ padding: 16, paddingBottom: 0 }}>\n            <TextField\n              id=\"standard-basic\"\n              label=\"Enter idea title\"\n              fullWidth={true}\n              color=\"secondary\"\n              onChange={handleChange}\n              />\n          </Grid>\n          <Grid item style={{ padding: 16, paddingBottom: 0 }}>\n            <TextField\n              id=\"standard-textarea\"\n              label=\"Enter idea description\"\n              placeholder=\"Placeholder\"\n              multiline\n              color=\"secondary\"\n              fullWidth={true}\n              rowsMax={5}\n              onChange={handleChange}/>\n          </Grid>\n          <Grid item>\n            <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" style={{ padding: 16 }}>\n              <Button onClick={handleSubmit}>submit</Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default IdeaForm","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\n\nconst options = [\n  \"sort by creation\",\n  \"sort by votes\",\n  \"sort by author\",\n  \"sort by id\"\n];\n\nexport default function SortIdea(props) {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    props.onClick(options[selectedIndex]);\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" >\n      <Grid item xs={12}>\n        <ButtonGroup\n          variant=\"outlined\"\n          color=\"secondary\"\n          ref={anchorRef}\n          aria-label=\"split button\"\n          disableElevation\n        >\n          <Button onClick={handleClick} disableElevation>\n            {options[selectedIndex]}\n          </Button>\n          <Button\n            color=\"secondary\"\n            size=\"small\"\n            aria-controls={open ? \"split-button-menu\" : undefined}\n            aria-expanded={open ? \"true\" : undefined}\n            aria-label=\"select merge strategy\"\n            aria-haspopup=\"menu\"\n            onClick={handleToggle}\n            disableElevation\n          >\n            <ArrowDropDownIcon />\n          </Button>\n        </ButtonGroup>\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n          style={{ zIndex: 100 }}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList id=\"split-button-menu\">\n                    {options.map((option, index) => (\n                      <MenuItem\n                        key={option}\n                        disabled={index === 2}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                      >\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport SnackMsg from './SnackMsg';\n\nconst Account = (props) => {\n  return (\n      <Container style={{ height: '300px'}}>\n        <Container style={{ height: '40px' }}></Container>\n        <Paper style={{ opacity: 0.8, paddingLeft: 18, paddingRight: 18 }}>\n          { (props.accountState === 'loading') ? (\n            <Grid container direction=\"row\" alignItems=\"center\" spacing={2} style={{ height: 64 }}>\n              <Grid item xs={12}>\n                <LinearProgress color=\"secondary\" />\n              </Grid>\n            </Grid>\n          ) : (\n            <Grid container direction=\"row\" alignItems=\"center\" spacing={2}>\n              <Grid item xs={2} direction=\"row\">\n                <Typography color=\"textSecondary\">account :</Typography>\n              </Grid>\n              <Grid>\n                <Typography style={{\n                  fontFamily: 'Courier Prime, monospace',\n                }}>{props.account}</Typography>\n              </Grid>\n              {\n                (props.isvoter)?(\n                  <Grid item xs={3}>\n                    <Grid container direction=\"row\" justify=\"flex-end\" spacing={2}>\n                      <Grid item>\n                        <Typography color=\"textSecondary\">Number of votes left:</Typography>\n                      </Grid>\n                      <Grid item>\n                        <Typography>{props.nbvotes}</Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                ):(\n                  <Grid item xs={3}>\n                    <Typography color=\"error\">Not registered!</Typography>\n                  </Grid>\n                )\n              }\n            </Grid>\n          )}\n        </Paper>\n      </Container>\n    )\n}\n\nexport default Account","import React from 'react';\nimport './App.css';\nimport { appTitle, appName, SettingsProvider, useSettingsContext } from './settings.js';\nimport HeaderBar from './components/HeaderBar';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Footer from './components/Footer';\nimport SnackMsg from './components/SnackMsg';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Idea from './components/Idea';\nimport AddIdea from './components/AddIdea';\nimport IdeaForm from './components/IdeaForm';\nimport SortIdea from './components/SortIdea';\nimport Chip from '@material-ui/core/Chip';\nimport DoneIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Account from './components/Account';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { /* compressToBase64, decompressFromBase64, */ decompressFromUint8Array/* , compressToUint8Array */ } from 'lz-string'\nimport { DAppProvider, useReady, useConnect, useAccountPkh } from './dapp';\nimport { TezosToolkit } from '@taquito/taquito';\nimport Link from '@material-ui/core/Link';\nimport { SettingsPanel } from './components/Settings';\n\nfunction SortIdeas(ideas, by) {\n  var newideas = ideas.sort((i1, i2) => {\n    if (by === 'sort by votes') {\n      return i2.nbvotes - i1.nbvotes;\n    } else if (by === 'sort by creation') {\n      return i2.creation - i1.creation;\n    } else if (by === 'sort by author') {\n      return i2.author - i1.author;\n    } else if (by === 'sort by id') {\n      return i1.id - i2.id;\n    } else {\n      return true;\n    }\n  });\n  return newideas;\n}\n\nfunction App() {\n  return (\n    <DAppProvider appName={appName}>\n      <SettingsProvider>\n      <React.Suspense fallback={null}>\n        <PageRouter />\n      </React.Suspense>\n      </SettingsProvider>\n    </DAppProvider>\n  );\n}\n\n/* const toHexString = bytes =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n\nfunction compressAll (ideas) {\n  ideas.forEach(idea => {\n    console.info(idea.id);\n    console.info(toHexString(compressToUint8Array(idea.title)));\n    console.info(toHexString(compressToUint8Array(idea.desc)));\n  });\n} */\n/*\nfunction decompressAll (ideas) {\n  return ideas.map(idea => { return {\n      id : idea.id,\n      title: decompressFromBase64(idea.title),\n      desc: decompressFromBase64(idea.desc),\n      author: idea.author,\n      creation: idea.creation\n  }});\n} */\n\nconst fromHexString = hexString =>\n  new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n\nfunction PageRouter() {\n  const ready = useReady();\n  const connect = useConnect();\n  const accountAddress = useAccountPkh();\n  const { settings, getBcdUrl } = useSettingsContext();\n\n/*   compressAll(mockupIdeas);\n */\n  const [contract, setContract] = React.useState(null);\n  const [storage, setStorage] = React.useState({ status: false, ideas: [], votes: [] });\n  const [reload, setReload] = React.useState(true);\n\n  const handleConnect = React.useCallback(async () => {\n    try {\n      await connect(settings.network);\n    } catch (err) {\n      alert(err.message);\n    };\n  }, [connect]);\n\n  const [viewSnack, setViewSnack] = React.useState(false);\n  const [ideaForm, setIdeaForm]   = React.useState(false);\n  const [ideaSort, setIdeaSort]   = React.useState('');\n\n  const reloadStorage = () => {\n    setReload(true);\n  }\n\n  async function loadIdeaxBoxContent () {\n    try {\n      const Tezos = new TezosToolkit(settings.endpoint);\n      var contract  = await Tezos.contract.at(settings.contract);\n      var cstorage   = await contract.storage();\n      var winners = [];\n      cstorage.selected.forEach(w => winners.push(parseInt(0+w)));\n      var ids = [];\n      cstorage.idea.forEach((i, k, m) => {\n        ids.push({\n          id:       k,\n          title:    decompressFromUint8Array(fromHexString(i.title)),\n          desc:     decompressFromUint8Array(fromHexString(i.desc)),\n          author:   i.author,\n          nbvotes:  parseInt(0+i.nbvotes,10),\n          creation: (i.creation+'').substring(0,10),\n          winner:   winners.includes(parseInt(k))\n        });\n      });\n      var votes = [];\n      cstorage.voter.forEach((v,k,m) => {\n        votes[k] = parseInt(0+v,10)\n      });\n      ids = SortIdeas(ids,'sort by creation');\n      console.log(ids);\n      setStorage({\n        status: (0+cstorage._state === '00'),\n        ideas: ids,\n        votes: votes,\n      });\n      setReload(false);\n    } catch (error) {\n      setReload(false);\n      console.log(`Error: ${error}`);\n    }\n  }\n\n  if (reload) {\n    loadIdeaxBoxContent().then(console.log('content loaded'));\n  }\n\n  function isVoter () {\n    if (storage.votes === undefined) {\n      return false;\n    } else {\n      return accountAddress in storage.votes\n    }\n  }\n\n  //var ideas = decompressAll(mockupIdeas)\n  //ideas = SortIdeas(ideas,ideaSort);\n\n  const prefersDarkMode = false; /*useMediaQuery('(prefers-color-scheme: dark)');*/\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          secondary: {\n            light: '#64b5f6',\n            main: '#2196f3',\n            dark: '#1976d2',\n            contrastText: '#fff',\n          }\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const handleAddIdea = () => {\n    setIdeaForm(true);\n  }\n\n  const closeIdeaForm = () => {\n    setIdeaForm(false);\n  }\n\n  const handleSort = (sort) => {\n    setIdeaSort(sort);\n    setStorage({\n      status: storage.status,\n      ideas: SortIdeas(storage.ideas,sort),\n      votes: storage.votes,\n    })\n  }\n\n  const handleReceipt = () => {\n    setViewSnack(false);\n    loadIdeaxBoxContent().then(console.log('content loaded'));\n  }\n\n  const openSnack = () => {\n    setViewSnack(true);\n  }\n\n  return (\n    <div className=\"App\">\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <HeaderBar theme={theme} appTitle={appTitle} handleConnect={handleConnect} />\n      <Container maxWidth=\"md\" style={{\n          height: 120}}>\n        { (ready)? (\n            <Account account={accountAddress}  isvoter={isVoter()} nbvotes={storage.votes[accountAddress]}/>\n          ):(\n            <div style={{\n              height: 500,\n             /*  backgroundImage : \"url(\" + process.env.PUBLIC_URL + '/idea-box.svg)',\n              backgroundRepeat  : 'no-repeat',\n              backgroundPosition: 'right 50% top 10%', */}} />\n          )\n        }\n        </Container>\n        <Container maxWidth=\"md\">\n        <Grid container direction=\"row\" spacing={2} style={{ marginBottom: 100 }}>\n          <Grid item xs={12}>\n            <Link href={getBcdUrl() + \"/operations\"} rel=\"noopener\" underline=\"none\" target=\"_blank\">\n            <Chip\n              label={\"Box \" + settings.contract + ((storage.status) ? \" is active\" : \" is closed\") }\n              color={ (storage.status) ? \"secondary\" : \"default\" }\n              clickable\n              onDelete={() => {}}\n              deleteIcon={ (storage.status) ? <DoneIcon /> : <ClearIcon />}\n              variant=\"outlined\"\n            />\n            </Link>\n          </Grid>\n          { (reload) ?(\n              <Grid item xs={12}>\n                <LinearProgress color=\"secondary\" style={{ marginTop: 60 }}/>\n              </Grid>\n            ):(\n              <Grid item >\n                <SortIdea onClick={handleSort}/>\n              </Grid>\n            )\n          }\n          {\n            storage.ideas.map(idea =>\n              <Grid item xs={12}>\n                <Idea\n                  id={idea.id}\n                  title={idea.title}\n                  desc={idea.desc}\n                  author={idea.author}\n                  creation={idea.creation}\n                  nbvotes={idea.nbvotes}\n                  winner={idea.winner}\n                  boxopen={storage.status && ready && isVoter()}\n                  openSnack={openSnack}\n                  handleReceipt={handleReceipt}>\n                </Idea>\n              </Grid>\n            )}\n        </Grid>\n      </Container>\n      { (storage.status && ready && isVoter() && (!viewSnack)) ? <AddIdea onClick={handleAddIdea}/> : <div/> }\n      <Footer appName={appName}></Footer>\n      <IdeaForm\n        open={ideaForm}\n        onclose={closeIdeaForm}\n        theme={theme}\n        account={accountAddress}\n        openSnack={openSnack}\n        handleReceipt={handleReceipt}\n      />\n      <SettingsPanel reloadStorage={ reloadStorage }/>\n      <SnackMsg open={viewSnack} theme={theme}/>\n    </ThemeProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}